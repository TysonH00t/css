{"version":3,"sources":["components/assets/audio/0.mp3","components/assets/audio/1.mp3","components/assets/audio/2.mp3","components/assets/audio/3.mp3","components/assets/audio/4.mp3","components/assets/audio/5.mp3","components/assets/audio/6.mp3","components/assets/audio/7.mp3","components/MarketHolder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MarketHolder","callSound","notes","noteCalculation","state","currentStockPrice","previousStockPrice","notePercentRange","console","log","setState","callStockAPI","socket","WebSocket","apiKey","externalThis","addEventListener","event","send","JSON","stringify","currentStock","undefined","parse","data","p","priceTrackingCycle","setInterval","apiCallInterval","onApiKeyChange","target","value","onCurrentStockChange","onApiIntervalChange","onNotePercentChange","onSoundVolumeChange","soundVolume","onApiKeyEntered","startPriceTracking","localStorage","setItem","stopTracking","this","getItem","href","onChange","type","min","max","step","disabled","onClick","style","color","Math","abs","round","Number","EPSILON","url","soundFile0","playStatus","Sound","status","PLAYING","playFromPosition","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","volume","soundFile1","soundFile2","soundFile3","soundFile4","soundFile5","soundFile6","soundFile7","React","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,0VCiD9BC,EAAb,kDACE,aAAe,IAAD,8BACZ,gBAyBFC,UAAY,WACR,IAAIC,EAAQ,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC1DC,GACD,EAAKC,MAAMC,kBAAoB,EAAKD,MAAME,qBACvC,IAAM,EAAKF,MAAMG,kBACnBJ,EAAkB,EACpBD,EAAM,IAAK,EAEJC,GAAmB,EAC1BD,EAAM,IAAK,EAEJC,EAAkB,EACzBD,EAAM,IAAK,EAEJC,EAAkB,EACzBD,EAAM,IAAK,EAGXA,EAAM,IAAK,EAEbM,QAAQC,IAAIN,GACZK,QAAQC,IAAIP,GACZ,EAAKQ,SAAS,CAAER,MAAOA,KAhDb,EAmDdS,aAAe,WAuBT,IAAMC,EAAS,IAAIC,UAAU,6BAA+B,EAAKT,MAAMU,QACjEC,EAAY,eAClBH,EAAOI,iBAAiB,QAAQ,SAAUC,GACxCL,EAAOM,KAAKC,KAAKC,UAAU,CAAC,KAAO,YAAa,OAAUL,EAAaX,MAAMiB,mBAG/ET,EAAOI,iBAAiB,WAAW,SAAUC,QACZK,IAA3BH,KAAKI,MAAMN,EAAMO,YAAuDF,IAAhCH,KAAKI,MAAMN,EAAMO,MAAMA,OACjET,EAAaL,SAAS,CAACJ,mBAAoBS,EAAaX,MAAMC,oBAC9DU,EAAaL,SAAS,CAACL,kBAAmBc,KAAKI,MAAMN,EAAMO,MAAMA,KAAK,GAAGC,SAnFrE,EAwFdC,mBAAqB,WASnB,EAAKf,eACLgB,YAAY,EAAK1B,UAAW,IAAO,EAAKG,MAAMwB,kBAlGlC,EAqGdC,eAAiB,SAACZ,GAChB,EAAKP,SAAS,CAAEI,OAAQG,EAAMa,OAAOC,SAtGzB,EAyGdC,qBAAuB,SAACf,GACtB,EAAKP,SAAS,CAAEW,aAAcJ,EAAMa,OAAOC,SA1G/B,EA6GdE,oBAAsB,SAAChB,GACrB,EAAKP,SAAS,CAAEkB,gBAAiBX,EAAMa,OAAOC,SA9GlC,EAiHdG,oBAAsB,SAACjB,GACrB,EAAKP,SAAS,CAAEH,iBAAkBU,EAAMa,OAAOC,SAlHnC,EAqHdI,oBAAsB,SAAClB,GACrB,EAAKP,SAAS,CAAE0B,YAAanB,EAAMa,OAAOC,SAtH9B,EAyHdM,gBAAkB,WAChB,EAAK3B,SAAS,CAAE4B,oBAAoB,IACpCC,aAAaC,QAAQ,SAAU,EAAKpC,MAAMU,QAC1CyB,aAAaC,QAAQ,eAAgB,EAAKpC,MAAMiB,cAChD,EAAKK,sBA7HO,EAgIde,aAAe,WACb,EAAK/B,SAAS,CAAE4B,oBAAoB,KA/HpC,EAAKlC,MAAQ,CACXU,OAAQ,GACRO,aAAc,GACdhB,kBAAmB,GACnBiC,oBAAoB,EACpBhC,mBAAoB,GACpBJ,MAAO,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACzD0B,gBAAiB,EACjBrB,iBAAkB,IAClB6B,YAAa,IAXH,EADhB,gEAiBI5B,QAAQC,IAAI,WACZiC,KAAKhC,SAAS,CAAE4B,oBAAoB,IAChCC,aAAaI,QAAQ,WACvBD,KAAKhC,SAAS,CAAEI,OAAQyB,aAAaI,QAAQ,YAE3CJ,aAAaI,QAAQ,iBACvBD,KAAKhC,SAAS,CAAEW,aAAckB,aAAaI,QAAQ,oBAvBzD,+BAsII,OACE,6BACE,iEACqC,IACnC,uBAAGC,KAAK,uBAAR,cAFF,2CAKA,0CAEE,2BACEb,MAAOW,KAAKtC,MAAMU,OAClB+B,SAAUH,KAAKb,eACfiB,KAAK,UAGT,gDAEE,2BACEf,MAAOW,KAAKtC,MAAMiB,aAClBwB,SAAUH,KAAKV,qBACfc,KAAK,UAGT,mDACoBJ,KAAKtC,MAAMwB,gBAD/B,cAEE,2BACEG,MAAOW,KAAKtC,MAAMwB,gBAClBiB,SAAUH,KAAKT,oBACfa,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,KAAK,OAGT,8DAC+BP,KAAKtC,MAAMG,iBAD1C,aAEE,2BACEwB,MAAOW,KAAKtC,MAAMG,iBAClBsC,SAAUH,KAAKR,oBACfY,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,KAAK,OAGT,+CACgBP,KAAKtC,MAAMgC,YAD3B,aAEE,2BACEL,MAAOW,KAAKtC,MAAMgC,YAClBS,SAAUH,KAAKP,oBACfW,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,KAAK,OAGT,6BACA,6BACA,4BACEC,SAAUR,KAAKtC,MAAMkC,mBACrBa,QAAST,KAAKL,iBAFhB,gCAMA,4BACEa,UAAWR,KAAKtC,MAAMkC,mBACtBa,QAAST,KAAKD,cAFhB,QAMCC,KAAKtC,MAAMC,kBACV,sCACU,gCAASqC,KAAKtC,MAAMC,oBAG9B,GAEDqC,KAAKtC,MAAMC,mBAAwD,KAAlCqC,KAAKtC,MAAME,mBAC3C,sCACU,gCACN,0BAAM8C,MAAO,CAACC,MAAQX,KAAKtC,MAAMC,kBAAoBqC,KAAKtC,MAAME,mBAAsB,EAAI,MAAQ,UAC9FoC,KAAKtC,MAAMC,kBAAoBqC,KAAKtC,MAAME,mBAAsB,EAAI,IAAM,IAD9E,IACoFgD,KAAKC,IAAID,KAAKE,MAAuE,KAAhEd,KAAKtC,MAAMC,kBAAoBqC,KAAKtC,MAAME,oBAA4BmD,OAAOC,SAAY,QAKtM,GAGDhB,KAAKtC,MAAMF,MAAM,IAAMwC,KAAKtC,MAAMkC,mBACjC,kBAAC,IAAD,CACEqB,IAAKC,IACLC,WAAYC,IAAMC,OAAOC,QACzBC,iBAAkB,EAClBC,UAAWxB,KAAKyB,kBAChBC,UAAW1B,KAAK2B,kBAChBC,kBAAmB5B,KAAK6B,0BACxBC,OAAQ9B,KAAKtC,MAAMgC,cAGrB,GAEDM,KAAKtC,MAAMF,MAAM,IAAMwC,KAAKtC,MAAMkC,mBACjC,kBAAC,IAAD,CACEqB,IAAKc,IACLZ,WAAYC,IAAMC,OAAOC,QACzBC,iBAAkB,EAClBC,UAAWxB,KAAKyB,kBAChBC,UAAW1B,KAAK2B,kBAChBC,kBAAmB5B,KAAK6B,0BACxBC,OAAQ9B,KAAKtC,MAAMgC,cAGrB,GAEDM,KAAKtC,MAAMF,MAAM,IAAMwC,KAAKtC,MAAMkC,mBACjC,kBAAC,IAAD,CACEqB,IAAKe,IACLb,WAAYC,IAAMC,OAAOC,QACzBC,iBAAkB,EAClBC,UAAWxB,KAAKyB,kBAChBC,UAAW1B,KAAK2B,kBAChBC,kBAAmB5B,KAAK6B,0BACxBC,OAAQ9B,KAAKtC,MAAMgC,cAGrB,GAEDM,KAAKtC,MAAMF,MAAM,IAAMwC,KAAKtC,MAAMkC,mBACjC,kBAAC,IAAD,CACEqB,IAAKgB,IACLd,WAAYC,IAAMC,OAAOC,QACzBC,iBAAkB,EAClBC,UAAWxB,KAAKyB,kBAChBC,UAAW1B,KAAK2B,kBAChBC,kBAAmB5B,KAAK6B,0BACxBC,OAAQ9B,KAAKtC,MAAMgC,cAGrB,GAEDM,KAAKtC,MAAMF,MAAM,IAAMwC,KAAKtC,MAAMkC,mBACjC,kBAAC,IAAD,CACEqB,IAAKiB,IACLf,WAAYC,IAAMC,OAAOC,QACzBC,iBAAkB,EAClBC,UAAWxB,KAAKyB,kBAChBC,UAAW1B,KAAK2B,kBAChBC,kBAAmB5B,KAAK6B,0BACxBC,OAAQ9B,KAAKtC,MAAMgC,cAGrB,GAEDM,KAAKtC,MAAMF,MAAM,IAAMwC,KAAKtC,MAAMkC,mBACjC,kBAAC,IAAD,CACEqB,IAAKkB,IACLhB,WAAYC,IAAMC,OAAOC,QACzBC,iBAAkB,EAClBC,UAAWxB,KAAKyB,kBAChBC,UAAW1B,KAAK2B,kBAChBC,kBAAmB5B,KAAK6B,0BACxBC,OAAQ9B,KAAKtC,MAAMgC,cAGrB,GAEDM,KAAKtC,MAAMF,MAAM,IAAMwC,KAAKtC,MAAMkC,mBACjC,kBAAC,IAAD,CACEqB,IAAKmB,IACLjB,WAAYC,IAAMC,OAAOC,QACzBC,iBAAkB,EAClBC,UAAWxB,KAAKyB,kBAChBC,UAAW1B,KAAK2B,kBAChBC,kBAAmB5B,KAAK6B,0BACxBC,OAAQ9B,KAAKtC,MAAMgC,cAGrB,GAEDM,KAAKtC,MAAMF,MAAM,IAAMwC,KAAKtC,MAAMkC,mBACjC,kBAAC,IAAD,CACEqB,IAAKoB,IACLlB,WAAYC,IAAMC,OAAOC,QACzBC,iBAAkB,EAClBC,UAAWxB,KAAKyB,kBAChBC,UAAW1B,KAAK2B,kBAChBC,kBAAmB5B,KAAK6B,0BACxBC,OAAQ9B,KAAKtC,MAAMgC,cAGrB,QArUV,GAAkC4C,IAAMC,W,MCnCzBC,MAVf,WACE,OACE,yBAAKC,UAAU,cACb,gCACI,kBAAC,EAAD,SCIUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7F,QAAQ6F,MAAMA,EAAMC,c","file":"static/js/main.05cbe5f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.ee2a5c2e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.3dc74288.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.31cfb0fd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.05601121.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.0ac91fc4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.0fec3643.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.ced3eddc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.1d7ee907.mp3\";","// import React from \"react\";\r\n\r\n// export class MarketHolder extends React.Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n\r\n//     };\r\n//     const socket = new WebSocket('wss://ws.finnhub.io?token=');\r\n\r\n//     socket.addEventListener('open', function (event) {\r\n//       socket.send(JSON.stringify({'type':'subscribe', 'symbol': 'AAPL'}));\r\n//   });\r\n\r\n//   socket.addEventListener('message', function (event) {\r\n//     console.log('Message from server ', JSON.parse(event.data).data[0].p);\r\n// });\r\n\r\n//     // apiCall = () => {\r\n\r\n//     // }\r\n//   }\r\n\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>\r\n//           Begin by creating an API key here:{' '}\r\n//           <a href='https://finnhub.io/'>Finnhub.io</a> and entering it within\r\n//           the field below\r\n//         </h1>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\nimport React from \"react\";\r\nimport soundFile0 from \"./assets/audio/0.mp3\";\r\nimport soundFile1 from \"./assets/audio/1.mp3\";\r\nimport soundFile2 from \"./assets/audio/2.mp3\";\r\nimport soundFile3 from \"./assets/audio/3.mp3\";\r\nimport soundFile4 from \"./assets/audio/4.mp3\";\r\nimport soundFile5 from \"./assets/audio/5.mp3\";\r\nimport soundFile6 from \"./assets/audio/6.mp3\";\r\nimport soundFile7 from \"./assets/audio/7.mp3\";\r\nimport Sound from \"react-sound\";\r\n\r\nexport class MarketHolder extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      apiKey: '',\r\n      currentStock: '',\r\n      currentStockPrice: '',\r\n      startPriceTracking: false,\r\n      previousStockPrice: '',\r\n      notes: [false, false, false, false, false, false, false, false],\r\n      apiCallInterval: 2,\r\n      notePercentRange: 100,\r\n      soundVolume: 50\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('mounted');\r\n    this.setState({ startPriceTracking: false });\r\n    if (localStorage.getItem('apiKey')) {\r\n      this.setState({ apiKey: localStorage.getItem('apiKey') });\r\n    }\r\n    if (localStorage.getItem('currentStock')) {\r\n      this.setState({ currentStock: localStorage.getItem('currentStock') });\r\n    }\r\n  }\r\n\r\n  callSound = () => {\r\n      let notes = [false, false, false, false, false, false, false, false];\r\n      let noteCalculation =\r\n        (this.state.currentStockPrice - this.state.previousStockPrice)\r\n         * (100 / this.state.notePercentRange);\r\n      if (noteCalculation > 1) {\r\n        notes[6] = true;\r\n      }\r\n      else if (noteCalculation < -1) {\r\n        notes[2] = true;\r\n      }\r\n      else if (noteCalculation < 0) {\r\n        notes[3] = true;\r\n      }\r\n      else if (noteCalculation > 0) {\r\n        notes[5] = true;\r\n      }\r\n      else {\r\n        notes[4] = true;\r\n      }\r\n      console.log(noteCalculation);\r\n      console.log(notes)\r\n      this.setState({ notes: notes });\r\n  };\r\n\r\n  callStockAPI = () => {\r\n    // this.setState({ notes: [false, false, false, false, false, false, false, false] });\r\n    // const finnhub = require('finnhub');\r\n    // const api_key = finnhub.ApiClient.instance.authentications['api_key'];\r\n    // api_key.apiKey = this.state.apiKey; // Replace this\r\n    // const finnhubClient = new finnhub.DefaultApi();\r\n\r\n    // //Quote\r\n    // finnhubClient.quote(this.state.currentStock, (error, data, response) => {\r\n    //   if (error || data.c === undefined) {\r\n    //     console.log(\r\n    //       'Something went wrong. Please check your API key and ticker symbol'\r\n    //     );\r\n    //     this.setState({ startPriceTracking: false });\r\n    //   } else {\r\n    //     console.log(data);\r\n    //     console.log(data.c);\r\n    //     this.setState({ previousStockPrice: this.state.currentStockPrice });\r\n    //     this.setState({ currentStockPrice: data.c });\r\n    //     this.callSound();\r\n    //   }\r\n    // });\r\n\r\n        const socket = new WebSocket('wss://ws.finnhub.io?token=' + this.state.apiKey);\r\n        const externalThis = this;\r\n        socket.addEventListener('open', function (event) {\r\n          socket.send(JSON.stringify({'type':'subscribe', 'symbol': externalThis.state.currentStock}));\r\n        });\r\n\r\n        socket.addEventListener('message', function (event) {\r\n          if (JSON.parse(event.data) !== undefined && JSON.parse(event.data).data !== undefined) {\r\n            externalThis.setState({previousStockPrice: externalThis.state.currentStockPrice})\r\n            externalThis.setState({currentStockPrice: JSON.parse(event.data).data[0].p})\r\n          }\r\n        });\r\n  };\r\n\r\n  priceTrackingCycle = () => {\r\n    // let externalThis = this;\r\n    // let intervalPrice = () => {\r\n    //   if (externalThis.state.startPriceTracking === true) {\r\n    //     externalThis.callStockAPI();\r\n    //   } else {\r\n    //     clearInterval(intervalPrice);\r\n    //   }\r\n    // };\r\n    this.callStockAPI();\r\n    setInterval(this.callSound, 1000 * this.state.apiCallInterval);\r\n  };\r\n\r\n  onApiKeyChange = (event) => {\r\n    this.setState({ apiKey: event.target.value });\r\n  };\r\n\r\n  onCurrentStockChange = (event) => {\r\n    this.setState({ currentStock: event.target.value });\r\n  };\r\n\r\n  onApiIntervalChange = (event) => {\r\n    this.setState({ apiCallInterval: event.target.value });\r\n  };\r\n\r\n  onNotePercentChange = (event) => {\r\n    this.setState({ notePercentRange: event.target.value });\r\n  };\r\n\r\n  onSoundVolumeChange = (event) => {\r\n    this.setState({ soundVolume: event.target.value });\r\n  };\r\n\r\n  onApiKeyEntered = () => {\r\n    this.setState({ startPriceTracking: true });\r\n    localStorage.setItem('apiKey', this.state.apiKey);\r\n    localStorage.setItem('currentStock', this.state.currentStock);\r\n    this.priceTrackingCycle();\r\n  };\r\n\r\n  stopTracking = () => {\r\n    this.setState({ startPriceTracking: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Begin by creating an API key here:{' '}\r\n          <a href='https://finnhub.io/'>Finnhub.io</a> and entering it within\r\n          the field below\r\n        </h1>\r\n        <label>\r\n          API Key-\r\n          <input\r\n            value={this.state.apiKey}\r\n            onChange={this.onApiKeyChange}\r\n            type='text'\r\n          />\r\n        </label>\r\n        <label>\r\n          Ticker Symbol-\r\n          <input\r\n            value={this.state.currentStock}\r\n            onChange={this.onCurrentStockChange}\r\n            type='text'\r\n          />\r\n        </label>\r\n        <label>\r\n          Refresh Interval({this.state.apiCallInterval} seconds) - \r\n          <input\r\n            value={this.state.apiCallInterval}\r\n            onChange={this.onApiIntervalChange}\r\n            type='range'\r\n            min='1'\r\n            max='120'\r\n            step='1'\r\n          />\r\n        </label>\r\n        <label>\r\n          Variable Price Sensitivity ({this.state.notePercentRange} percent)-\r\n          <input\r\n            value={this.state.notePercentRange}\r\n            onChange={this.onNotePercentChange}\r\n            type='range'\r\n            min='1'\r\n            max='200'\r\n            step='1'\r\n          />\r\n        </label>\r\n        <label>\r\n          Tone Volume ({this.state.soundVolume} percent)-\r\n          <input\r\n            value={this.state.soundVolume}\r\n            onChange={this.onSoundVolumeChange}\r\n            type='range'\r\n            min='0'\r\n            max='100'\r\n            step='1'\r\n          />\r\n        </label>\r\n        <hr />\r\n        <br />\r\n        <button\r\n          disabled={this.state.startPriceTracking}\r\n          onClick={this.onApiKeyEntered}\r\n        >\r\n          Submit Key and Ticker Symbol\r\n        </button>\r\n        <button\r\n          disabled={!this.state.startPriceTracking}\r\n          onClick={this.stopTracking}\r\n        >\r\n          Stop\r\n        </button>\r\n        {this.state.currentStockPrice ? (\r\n          <p>\r\n            Price: $<strong>{this.state.currentStockPrice}</strong>\r\n          </p>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {this.state.currentStockPrice && (this.state.previousStockPrice !== '') ? (\r\n          <p>\r\n            Change: <strong>\r\n              <span style={{color: (this.state.currentStockPrice - this.state.previousStockPrice) < 0 ? 'red' : 'green'}}>\r\n                {(this.state.currentStockPrice - this.state.previousStockPrice) < 0 ? '-' : '+'} {Math.abs(Math.round((this.state.currentStockPrice - this.state.previousStockPrice) * 100 + Number.EPSILON ) / 100)}\r\n              </span>\r\n              </strong>\r\n          </p>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {/* ===================== */}\r\n        {this.state.notes[0] && this.state.startPriceTracking ? (\r\n          <Sound\r\n            url={soundFile0}\r\n            playStatus={Sound.status.PLAYING}\r\n            playFromPosition={0 /* in milliseconds */}\r\n            onLoading={this.handleSongLoading}\r\n            onPlaying={this.handleSongPlaying}\r\n            onFinishedPlaying={this.handleSongFinishedPlaying}\r\n            volume={this.state.soundVolume}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {this.state.notes[1] && this.state.startPriceTracking ? (\r\n          <Sound\r\n            url={soundFile1}\r\n            playStatus={Sound.status.PLAYING}\r\n            playFromPosition={0 /* in milliseconds */}\r\n            onLoading={this.handleSongLoading}\r\n            onPlaying={this.handleSongPlaying}\r\n            onFinishedPlaying={this.handleSongFinishedPlaying}\r\n            volume={this.state.soundVolume}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {this.state.notes[2] && this.state.startPriceTracking ? (\r\n          <Sound\r\n            url={soundFile2}\r\n            playStatus={Sound.status.PLAYING}\r\n            playFromPosition={0 /* in milliseconds */}\r\n            onLoading={this.handleSongLoading}\r\n            onPlaying={this.handleSongPlaying}\r\n            onFinishedPlaying={this.handleSongFinishedPlaying}\r\n            volume={this.state.soundVolume}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {this.state.notes[3] && this.state.startPriceTracking ? (\r\n          <Sound\r\n            url={soundFile3}\r\n            playStatus={Sound.status.PLAYING}\r\n            playFromPosition={0 /* in milliseconds */}\r\n            onLoading={this.handleSongLoading}\r\n            onPlaying={this.handleSongPlaying}\r\n            onFinishedPlaying={this.handleSongFinishedPlaying}\r\n            volume={this.state.soundVolume}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {this.state.notes[4] && this.state.startPriceTracking ? (\r\n          <Sound\r\n            url={soundFile4}\r\n            playStatus={Sound.status.PLAYING}\r\n            playFromPosition={0 /* in milliseconds */}\r\n            onLoading={this.handleSongLoading}\r\n            onPlaying={this.handleSongPlaying}\r\n            onFinishedPlaying={this.handleSongFinishedPlaying}\r\n            volume={this.state.soundVolume}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {this.state.notes[5] && this.state.startPriceTracking ? (\r\n          <Sound\r\n            url={soundFile5}\r\n            playStatus={Sound.status.PLAYING}\r\n            playFromPosition={0 /* in milliseconds */}\r\n            onLoading={this.handleSongLoading}\r\n            onPlaying={this.handleSongPlaying}\r\n            onFinishedPlaying={this.handleSongFinishedPlaying}\r\n            volume={this.state.soundVolume}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {this.state.notes[6] && this.state.startPriceTracking ? (\r\n          <Sound\r\n            url={soundFile6}\r\n            playStatus={Sound.status.PLAYING}\r\n            playFromPosition={0 /* in milliseconds */}\r\n            onLoading={this.handleSongLoading}\r\n            onPlaying={this.handleSongPlaying}\r\n            onFinishedPlaying={this.handleSongFinishedPlaying}\r\n            volume={this.state.soundVolume}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {this.state.notes[7] && this.state.startPriceTracking ? (\r\n          <Sound\r\n            url={soundFile7}\r\n            playStatus={Sound.status.PLAYING}\r\n            playFromPosition={0 /* in milliseconds */}\r\n            onLoading={this.handleSongLoading}\r\n            onPlaying={this.handleSongPlaying}\r\n            onFinishedPlaying={this.handleSongFinishedPlaying}\r\n            volume={this.state.soundVolume}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { MarketHolder } from './components/MarketHolder';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='background'>\n      <header>\n          <MarketHolder />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}